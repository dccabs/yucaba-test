import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const handleAdd = async () => {
    const test = await fetch('/api/todos/add', {
      method: 'POST',
      body: JSON.stringify({ text: 'test' }),
      headers: {
        'Content-Type': 'application/json',
      },
    })

    if (test.ok) {
      console.log('success')
    }
    if (test.status === 401) {
      console.log('error')
    }
  }

  const handleEdit = async () => {
    const test = await fetch('/api/todos/edit', {
      method: 'POST',
      body: JSON.stringify({ id: 1, text: 'edit this' }),
      headers: {
        'Content-Type': 'application/json',
      },
    })

    if (test.ok) {
      console.log('success')
    }
    if (test.status === 401) {
      console.log('error')
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="max-w-5xl mx-auto p-10 space-y-4">
        <button></button>
        <h1 className="text-3xl font-bold">Yucaba Test</h1>
        <div className="space-y-4">
          <p>
            Please use this repo to construct a TODO app with Next.js and
            Serverless functions.
          </p>
          <p>The application should consist of the following</p>
          <ul className="list-disc">
            <li>
              A text field where a user can enter a todo. The todo can be
              anything like feed the dog, wash the car, etc. When the user
              clicks the submit or hits enter it should submit the new todo
            </li>
            <li>
              Below the text box should be a list of todos that are already in
              the DB. There should be a way to edit and delete the todo
            </li>
            <li>
              If there is an error, then the user should be notified somehow
            </li>
            <li>
              There should be loading indicators or text letting the user know
              something is loading.
            </li>
          </ul>
          <p>
            Please use <span className="text-blue-600">Tailwind UI</span>{' '}
            components to construct the following application. Use your best
            judgement of what components to use. If you have any questions,
            please ask.
          </p>
          <p>
            You can add yourself to my tailwind UI component account by
            following this link:{' '}
            <a
              className="text-blue-500 underline cursor-pointer"
              target="_blank"
              href="https://tailwindui.com/teams/invite/1mpK8w8oKETlbsRqtDcyky2V1Yxy2DHj">
              Tailwind UI
            </a>
          </p>
          <p>
            Please install and use the{' '}
            <a
              className="text-blue-600"
              href="https://tanstack.com/query/latest/docs/react/quick-start"
              target="_blank">
              React Query
            </a>{' '}
            library to manage your endpoints and state.
          </p>
          <p>
            The following endpoints/serverless functions can be used to create
            your todo app. You can find them in the api directory of this repo.
          </p>
          <ul className="my-4 list-disc">
            <li>
              /api/todos/add payload is{' '}
              {`{
                  text: string
                }`}
            </li>
            <li>
              /api/todos/delete payload is{' '}
              {`{
                  id: number
                }`}
            </li>
            <li>
              /api/todos/edit payload is{' '}
              {`{
                  id: number,
                  text: string
                }`}
            </li>
            <li>/api/todos/get - no payload needed</li>
            <li>
              ** All endpoints are using the <strong>POST</strong> method
            </li>
          </ul>
          <p>
            Please spend up to 3 hours on the project. If you have any questions
            email me at dan@yucaba.com
          </p>
          <button onClick={handleAdd} className="p-4 border-gray-200 border">
            Sample Add todo endpoint called here
          </button>
          <button onClick={handleEdit} className="p-4 border-gray-200 border">
            Sample Edit todo endpoint called here
          </button>
          <p>You can put your test on the /test page.</p>
        </div>
      </main>
    </>
  )
}
